{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = _ref => {\n  let {\n    direction,\n    axis\n  } = _ref;\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = \"\".concat(scaleCur.current.toFixed(2));\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = \"\".concat(scaleCur.current.toFixed(2));\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\nexport { ScalingSphere, calculateOffset };","map":{"version":3,"names":["React","THREE","useThree","Html","context","calculateScaleFactor","vec1","Vector3","vec2","calculateOffset","clickPoint","normal","rayStart","rayDir","e1","dot","e2","e3","copy","multiplyScalar","sub","add","offset","upV","scaleV","scaleMatrix","Matrix4","ScalingSphere","_ref","direction","axis","scaleLimits","annotations","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","useContext","size","state","camControls","controls","divRef","useRef","objRef","meshRef","scale0","scaleCur","clickInfo","isHovered","setIsHovered","useState","position","onPointerDown","useCallback","e","current","innerText","concat","toFixed","style","display","stopPropagation","rotation","extractRotation","matrixWorld","point","clone","origin","setFromMatrixPosition","dir","applyMatrix4","normalize","mPLG","mPLGInv","invert","offsetMultiplier","getWorldPosition","camera","component","directions","enabled","target","setPointerCapture","pointerId","onPointerMove","min","max","undefined","offsetW","ray","offsetL","offsetH","upscale","Math","pow","shiftKey","round","set","setComponent","makeScale","x","y","z","premultiply","multiply","onPointerUp","releasePointerCapture","onPointerOut","radius","matrixL","useMemo","quaternion","Quaternion","setFromUnitVectors","makeRotationFromQuaternion","color","createElement","ref","matrix","matrixAutoUpdate","background","padding","borderRadius","whiteSpace","className","renderOrder","args","transparent","polygonOffset","polygonOffsetFactor"],"sources":["/workspaces/Vaishalis27.github.io/my-3d-portfolio/node_modules/@react-three/drei/web/pivotControls/ScalingSphere.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = ({\n  direction,\n  axis\n}) => {\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { ScalingSphere, calculateOffset };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}